openapi: 3.0.0
info:
  title: Admin API
  description: API for managing admin users and chat functionality
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local development server

paths:
  /register:
    post:
      summary: Register a new admin
      description: Endpoint to register a new admin.
      operationId: handleRegister
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        '200':
          description: Admin registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Admin'
                  statusCode:
                    type: integer
        '409':
          description: Admin already exists
        '500':
          description: Internal server error

  /login:
    post:
      summary: Admin login
      description: Endpoint to log an admin in.
      operationId: handleLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Admin logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Admin'
                  statusCode:
                    type: integer
        '401':
          description: Invalid email or password
        '500':
          description: Internal server error

  /detailAdmin:
    get:
      summary: Get Admin Detail
      description: Get detailed information of the admin for the dashboard.
      operationId: handleFullDetailOfAdmin
      responses:
        '200':
          description: Admin details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Admin Detail"
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        example: "John Doe"
                      email:
                        type: string
                        example: "admin@example.com"
                      phoneNumber:
                        type: string
                        example: "+1 234 567 890"
                      role:
                        type: string
                        example: "SuperAdmin"
        '404':
          description: Admin not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Do Not Get Detail"
                  data:
                    type: null
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Internal Server error"
                  data:
                    type: null
                  errors:
                    type: string
                    example: "Error details here"

  /getLatestChat:
    get:
      summary: Get Admin all messages with users
      description: Get Admin's latest chat rooms and messages with users
      operationId: handleGetChatAdminLatest
      responses:
        '200':
          description: Chat rooms and messages retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "All chat conversations fetched successfully"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        latestMessage:
                          type: object
                          properties:
                            _id:
                              type: string
                            from:
                              type: string
                            to:
                              type: string
                            timestamp:
                              type: string
                            messageContent:
                              type: string
                            # Include other fields as necessary
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Error fetching chat history"
                  data:
                    type: null
                  errors:
                    type: string
                    example: "Error details here"

  /editadmindetail:
    put:
      summary: Edit admin details
      description: Endpoint to update admin's personal details.
      operationId: handleadmindetail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        '200':
          description: Admin details updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Admin'
                  statusCode:
                    type: integer
        '404':
          description: Admin not found
        '500':
          description: Internal server error

  /chat:
    get:
      summary: Get chat history with admin
      description: Retrieve the chat history between a user and admin.
      operationId: handleGetChatAdmin
      parameters:
        - in: query
          name: userId
          required: true
          description: The user ID of the user whose chat history needs to be fetched.
          schema:
            type: string
            example: "12345"
      responses:
        '200':
          description: Chat history retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '500':
          description: Error fetching chat history
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Error fetching chat history"
                  data:
                    type: array
                    items:
                      type: object
                    example: []
                  statusCode:
                    type: integer
                    example: 500
                  errors:
                    type: string
                    example: "Internal Server Error"

    post:
      summary: Send a message to admin
      description: Send a message to the admin from the user.
      operationId: handleSendMessages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '200':
          description: Message sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Message sent successfully"
                  data:
                    $ref: '#/components/schemas/Message'
                  statusCode:
                    type: integer
                    example: 200
        '500':
          description: Error sending message
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Error sending message"
                  data:
                    type: array
                    items:
                      type: object
                    example: []
                  statusCode:
                    type: integer
                    example: 500
                  errors:
                    type: string
                    example: "Error details here"

  /logout:
    post:
      summary: Logout the user and clear the token in the database.
      description: Logout the user and clear the token in the database.
      responses:
        '200':
          description: Logout successful.
        '404':
          description: User not found.
        '500':
          description: Internal Server Error.
      security:
        - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Admin:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        contactNumber:
          type: string
        countryCode:
          type: string
        role:
          type: string
          default: 'admin'
        token:
          type: string
          default: null
      required:
        - name
        - email
        - password
        - countryCode
        - contactNumber

    Message:
      type: object
      properties:
        room:
          type: string
        from:
          type: string
        to:
          type: string
        content:
          type: string
        timestamp:
          type: string
          format: date-time
      required:
        - room
        - from
        - to
        - content
        - timestamp

security:
  - bearerAuth: []
